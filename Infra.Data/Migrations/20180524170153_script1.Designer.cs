// <auto-generated />
using Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Infra.Data.Migrations
{
    [DbContext(typeof(AdminContext))]
    [Migration("20180524170153_script1")]
    partial class script1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entidade.Aluno", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11);

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("Domain.Entidade.Disciplina", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("Domain.Entidade.Turma", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("Domain.Entidade.TurmaAluno", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("AlunoId")
                        .HasMaxLength(36);

                    b.Property<string>("TurmaId")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("Id");

                    b.HasIndex("TurmaId");

                    b.ToTable("TurmaAluno");
                });

            modelBuilder.Entity("Domain.Entidade.TurmaDisciplina", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(36);

                    b.Property<string>("DisciplinaId")
                        .HasMaxLength(36);

                    b.Property<string>("TurmaId")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("Id");

                    b.HasIndex("TurmaId");

                    b.ToTable("TurmaDisciplinas");
                });

            modelBuilder.Entity("Domain.Entidade.TurmaAluno", b =>
                {
                    b.HasOne("Domain.Entidade.Aluno", "Alunos")
                        .WithMany("turmaAluno")
                        .HasForeignKey("AlunoId");

                    b.HasOne("Domain.Entidade.Turma", "Turmas")
                        .WithMany()
                        .HasForeignKey("TurmaId");
                });

            modelBuilder.Entity("Domain.Entidade.TurmaDisciplina", b =>
                {
                    b.HasOne("Domain.Entidade.Disciplina", "Disciplinas")
                        .WithMany()
                        .HasForeignKey("DisciplinaId");

                    b.HasOne("Domain.Entidade.Turma", "Turmas")
                        .WithMany("turmaDisciplina")
                        .HasForeignKey("TurmaId");
                });
#pragma warning restore 612, 618
        }
    }
}
